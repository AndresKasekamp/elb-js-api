import{e as a,y as o,c as U,Q as R,kw as I,kx as P,d as $,P as T,n as M,d$ as Q,T as W,O as X,S as L,bX as Y,hS as q,a8 as Z,c1 as ee,ky as te,kz as se,kA as ie,J as z,N as B,kB as C,kC as f,e1 as v,ar as k,kD as A,kE as H,l as re,kF as b,kG as S,kH as O,kI as ae,aD as ne,kJ as oe,hx as V,cy as E,cK as le,cF as ue,cG as me,cB as ce,kK as he,kL as D,w as pe,e0 as de,kM as x,hl as ve,hn as N,ao as ye,kN as j,kO as we}from"./index-J0iiHjMT.js";import{l as _e}from"./Draw-DYxsSuyr.js";import{l as fe,d as ge,v as be,x as $e}from"./InteractiveToolBase-WDic4GPF.js";import{S as ke}from"./GraphicManipulator-ku6oRBpa.js";import{n as Le,u as Me}from"./MeasurementWidgetContent-d8uX7Gw_.js";import"./SnappingVisualizer2D-NnEm1PvQ.js";import"./SnappingContext-6K6JmvvY.js";import"./PointSnappingHint-ULetRXiW.js";import"./EditGeometryOperations-TPE5Wzab.js";import"./SnappingOperation-2U48wt1k.js";import"./surfaceCoordinateSystems-siQq4eBA.js";import"./dehydratedFeatureComparison-hdPq-zad.js";import"./SnappingDragPipelineStep-THHIXt-p.js";import"./drawUtils-woTYaREB.js";import"./drapedUtils-9db1OpTX.js";const y=1e5;let w=class extends fe{constructor(e){super(e),this._drawActive=!1,this._measurementLayer=new R({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new R({internal:!0,listMode:"hide",visible:!1}),this._vertices=[],this.geodesicDistanceThreshold=1e5,this.measurement=null,this.measurementLabel=null}initialize(){I("esri/core/t9n/Units").then(t=>{this.messages=t}),this.addHandles(P(async()=>{this.messages=await I("esri/core/t9n/Units")}));const e=this.view;this._draw=new _e({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer]),e.focus(),this.addHandles([$(()=>[this.unit,this.geodesicDistanceThreshold,this.messages],()=>{this._updateGraphics()},T),$(()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor],()=>{if(!this._vertices.length)return;const t=this._vertices.map(({coord:i})=>i);for(const{handle:i}of this._vertices)i.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(t)})])}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=M(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=M(this._measurementLayer),this._manipulatorLayer=M(this._manipulatorLayer),this._resetVertices()}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}onActivate(){this._drawActive||this._vertices.length!==0||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1}reset(){this.manipulators.removeAll(),this._resetVertices(),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._draw.reset(),this._drawActive=!1}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const e=this._draw.create("polyline",{mode:"click"});e.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],t=>this._updateSketch(t.vertices)),e.on("draw-complete",()=>this._stopSketch())}_stopSketch(){if(this._vertices.length<3)return this.reset(),void this._startSketch();this.manipulators.forEach(({manipulator:e})=>{e.interactive=!0}),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const t=this.view.spatialReference;if(t&&(!K(t)||Q())){for(;this._vertices.length>e.length;){const{handle:i,manipulator:r}=this._vertices.pop();i.remove(),this.manipulators.remove(r)}for(let i=this._vertices.length;i<e.length;i++){const[r,u]=e[i],l=Ae(new W({x:r,y:u,spatialReference:t}),this.view,this._manipulatorLayer);this.manipulators.add(l);const m=ge(l,(n,s)=>{s.next(be(this.view)).next($e(n.graphic,X.Local)).next(()=>{const c=n.graphic.geometry;this._vertices[i].coord=[c.x,c.y],this._updateGraphics()})});this._vertices.push({manipulator:l,coord:[r,u],handle:m})}if(this._vertices.length){const i=this._vertices.length-1,r=this._vertices[i],[u,l]=e[i];r.coord[0]===u&&r.coord[1]===l||(r.coord=[u,l],r.manipulator.graphic.geometry=new W({x:u,y:l,spatialReference:t}));const m=this._drawActive?this._vertices[i].manipulator:null;this.manipulators.forEach(({manipulator:n})=>{n.interactive=m==null||n!==m})}this._updateGraphics()}}_updateGraphics(){if(this._vertices.length<2)return void this._measurementLayer.removeAll();const e=Se(this._vertices.map(({coord:d})=>d),this.view.spatialReference,this.geodesicDistanceThreshold);if(!e)return;const{measurement:t,fillGeometry:i,outlineGeometry:r}=e;this._set("measurement",t);const u=t?De(this.messages,t,this.unit):null;if(this._set("measurementLabel",u),!i&&!r)return;let l,m,n;const{graphics:s}=this._measurementLayer,c=s.length===3,{effectiveTheme:h}=this.view;c?(l=s.at(0),m=s.at(1),n=s.at(2)):(l=new L({symbol:new Y({color:q(h.accentColor,.3),outline:null})}),m=new L({symbol:new Z({color:h.accentColor,width:2})}),n=new L({symbol:new ee({color:h.textColor,font:new te({size:14,family:"sans-serif"}),haloColor:q(se(h.textColor,ie.Low),.5),haloSize:2})}),s.removeAll(),s.addMany([l,m,n])),l.geometry=i,m.geometry=r,n.geometry=i==null?void 0:i.centroid,n.symbol.text=(u==null?void 0:u.area)??""}};function Ae(e,t,i){const u={style:"circle",color:q(t.effectiveTheme.accentColor,.5),outline:{type:"simple-line",width:0}},l=new z({...u,size:8}),m=new z({...u,size:1.5*8}),n=new L({geometry:e,symbol:l});return new ke({view:t,layer:i,graphic:n,focusedSymbol:m})}function Se(e,t,i){if(e.length===2){const c=new B({paths:e,spatialReference:t});let h;if(t!=null&&t.isGeographic)if(C(t))h=f(c,y);else{const d=v(c,k.WGS84),g=f(d,y);h=v(g,t)}else if(t!=null&&t.isWebMercator)h=A(c,y,"meters");else if(H(c,"meters")>=i){const d=v(c,k.WGS84),g=f(d,y);h=v(g,t)}else h=c;return{measurement:null,fillGeometry:null,outlineGeometry:h}}e.push(e[0]);const r=new B({paths:[e],spatialReference:t}),u=new re({rings:[e],spatialReference:t});let l,m,n=null,s=null;if(t!=null&&t.isGeographic)if(C(t)){if(n=f(r,y),s=f(u,y),s=b(s),!s)return null;l=S([r],"meters")[0],m=O([s],"square-meters")[0]}else{const c=k.WGS84,h=v(r,c),d=v(u,c);if(n=f(h,y),s=f(d,y),s=b(s),!s)return null;l=S([h],"meters")[0],m=O([s],"square-meters")[0],n=v(n,t),s=v(s,t)}else if(t!=null&&t.isWebMercator){if(n=A(r,y,"meters"),s=A(u,y,"meters"),s=b(s),!s)return null;l=ae(r,"meters"),m=ne(s,"square-meters")}else{const c=H(r,"meters");if(c>=i){const h=k.WGS84,d=v(r,h),g=v(u,h);if(n=f(d,y),s=f(g,y),s=b(s),!s)return null;l=S([d],"meters")[0],m=O([s],"square-meters")[0],n=v(n,t),s=v(s,t)}else{if(n=r,s=b(u),!s)return null;l=c,m=oe(s,"square-meters")}}return{measurement:{geometry:s,area:m,perimeter:l},fillGeometry:s,outlineGeometry:n}}function Oe(e){return e!=null}function K(e){if(!e)return!1;const{isGeographic:t,isWebMercator:i,isWGS84:r}=e;return t&&!r&&!C(e)||!t&&!i}function De(e,t,i){if(!t||!e)return null;const r={area:null,perimeter:null},{area:u,perimeter:l}=t;switch(i){case"metric":r.area=ue(e,u,"square-meters");break;case"imperial":r.area=le(e,u,"square-meters");break;default:{const n=V(u,"square-meters",i);r.area=E(e,n,i);break}}const m=xe(i);if(m)switch(m){case"metric":r.perimeter=ce(e,l,"meters");break;case"imperial":r.perimeter=me(e,l,"meters");break;default:{const n=V(l,"meters",m);r.perimeter=E(e,n,m);break}}else r.perimeter="";return r}function xe(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-meters":return"meters";case"square-kilometers":return"kilometers";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";default:return null}}a([o()],w.prototype,"_drawActive",void 0),a([o({readOnly:!0})],w.prototype,"cursor",null),a([o({value:!0})],w.prototype,"editable",null),a([o({type:Number})],w.prototype,"geodesicDistanceThreshold",void 0),a([o({readOnly:!0})],w.prototype,"measurement",void 0),a([o({readOnly:!0})],w.prototype,"measurementLabel",void 0),a([o()],w.prototype,"messages",void 0),a([o()],w.prototype,"unit",void 0),a([o({constructOnly:!0})],w.prototype,"view",void 0),w=a([U("esri.widgets.AreaMeasurement2D.AreaMeasurement2DTool")],w);let _=class extends Le{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="AreaMeasurement2DViewModel is only supported in 2D views.",this.geodesicDistanceThreshold=1e5}initialize(){this.addHandles([$(()=>{var e;return(e=this.view)==null?void 0:e.spatialReference},()=>this.clear()),$(()=>this.unit,e=>{this.tool!=null&&(this.tool.unit=e)},T),$(()=>this.geodesicDistanceThreshold,e=>{this.tool!=null&&(this.tool.geodesicDistanceThreshold=e)},T)])}get measurement(){return this.tool!=null?this.tool.measurement:null}get measurementLabel(){return this.tool!=null?this.tool.measurementLabel:null}get state(){var e;return this.disabled||this.view==null||!Oe(this.view.spatialReference)?"disabled":(e=this.tool)!=null&&e.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return D}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}async start(){const e=this.view;e!=null&&(await pe(()=>e.ready),K(e.spatialReference)&&await de()),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new w({view:this.view,visible:this.visible,geodesicDistanceThreshold:this.geodesicDistanceThreshold,unit:this.unit})}_validateUnit(e){const{unitOptions:t,defaultUnit:i}=this;return e!=null&&t.includes(e)?e:t.includes(i)?i:t.length>0?t[0]:i}_validateUnits(e){if(e==null)return[];const t=e.filter(i=>D.includes(i));return t.length===0?D.slice():t}};a([o(he)],_.prototype,"defaultUnit",void 0),a([o({type:Number})],_.prototype,"geodesicDistanceThreshold",void 0),a([o({readOnly:!0})],_.prototype,"measurement",null),a([o({readOnly:!0})],_.prototype,"measurementLabel",null),a([o({readOnly:!0})],_.prototype,"state",null),a([o({type:String})],_.prototype,"unit",null),a([o({type:[String]})],_.prototype,"unitOptions",null),_=a([U("esri.widgets.AreaMeasurement2D.AreaMeasurement2DViewModel")],_);const F=_,J="esri-area-measurement-2d",G={base:J,newMeasurementButton:`${J}__clear-button`,widgetIcon:we.measureArea};let p=class extends ve{constructor(e,t){super(e,t),this.iconClass=G.widgetIcon,this.icon=null,this.messages=null,this.messagesUnits=null,this.messagesCommon=null,this.viewModel=new F}get active(){return this.viewModel.active}get label(){var e;return((e=this.messages)==null?void 0:e.widgetLabel)??""}set label(e){this._overrideIfSome("label",e)}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{messages:e,messagesCommon:t,messagesUnits:i,unit:r,unitOptions:u,viewModel:l,visible:m}=this,{active:n,measurementLabel:s,state:c,supported:h}=l;return N("div",{"aria-label":e.widgetLabel,class:this.classes(G.base,j.widget,j.panel),key:this,role:"presentation"},m?N(Me,{active:n,measurementItems:[{key:"area",title:i==null?void 0:i.measures.area,value:s==null?void 0:s.area},{key:"perimeter",title:e.perimeter,value:s==null?void 0:s.perimeter}],messages:{...e,notApplicable:t.notApplicable},newMeasurementButtonClass:G.newMeasurementButton,state:c,supported:h,unit:r,unitOptions:u,onNewMeasurementClick:()=>{ye(l.start())},onUnitChange:d=>{this.unit=d}}):null)}};a([o({readOnly:!0})],p.prototype,"active",null),a([o()],p.prototype,"iconClass",void 0),a([o()],p.prototype,"icon",void 0),a([o()],p.prototype,"label",null),a([o(),x("esri/widgets/AreaMeasurement2D/t9n/AreaMeasurement2D")],p.prototype,"messages",void 0),a([o(),x("esri/core/t9n/Units")],p.prototype,"messagesUnits",void 0),a([o(),x("esri/t9n/common")],p.prototype,"messagesCommon",void 0),a([o()],p.prototype,"uiStrings",void 0),a([o()],p.prototype,"unit",null),a([o()],p.prototype,"unitOptions",null),a([o()],p.prototype,"view",null),a([o({type:F})],p.prototype,"viewModel",void 0),a([o({type:Boolean})],p.prototype,"visible",null),p=a([U("esri.widgets.AreaMeasurement2D")],p);const Je=p;export{Je as default};
