import{b3 as Me,bO as Y,bx as q,b4 as E,bL as Ve,a8 as p,oH as ze,ci as Z,cj as xe,zi as Oe,bu as I,a7 as ne,by as Ie,nw as Te,zj as oe,c6 as Ee,be as je,hJ as ae,c9 as D,ca as K,cK as le,zk as We,mS as ke,sj as Ue,kk as he,t9 as de,cJ as Fe,d2 as qe,py as He,d5 as Q,d6 as Ne,i2 as Be,e as a,y as d,c as J,g as ie,B as z,a9 as ce,ck as Je,cl as Xe,R as Ke,z as Qe,ed as ue,zl as Ye,T as ee,i1 as Ze,L as et,xS as tt,xX as st,bi as H,xR as pe,x_ as it,y_ as rt,xY as ge,xW as nt,y1 as j,y3 as ot,de as at,yq as lt,va as W,y5 as ht,y6 as dt,yp as ct,y7 as ut,y9 as pt,yF as gt,yb as mt,yc as _t,yd as yt,y2 as V,y4 as ft,ys as vt,xT as me,m3 as k,yu as Lt,yv as Ct,yh as wt,yi as St,p7 as Ge,bA as N,b2 as x,sl as Pt,b7 as _e,b8 as ye,tb as bt,bR as $t,bS as fe,l0 as At,nF as ve,kL as Le,kM as Mt,hR as Ce,bT as Vt,l1 as xt,kJ as Gt,P as Dt,b as P,zm as Rt,hr as zt,bP as Ot,cp as It,zn as Tt,zo as Et,zp as jt,zq as Wt,kI as kt,kV as Ut}from"./index-pCX-0tJH.js";import{s as Ft}from"./AnalysisView3D-XCzG0Hzh.js";import{e as te}from"./interfaces-tkyofe_Z.js";import{T as qt,d as Ht,M as Nt,G as Bt,w as Jt,b as Xt,S as Kt,L as Qt}from"./measurementUtils-U47xEmCr.js";import{t as se,a as Yt}from"./UnitNormalizer-RQizSo9a.js";import{U as we}from"./euclideanAreaMeasurementUtils-jpli3_gk.js";import{t as Zt,u as T}from"./LineVisualElement-iKo1s90I.js";import{V as Se,p as es,w as ts,l as ss}from"./EditGeometryOperations-vpHcsZOg.js";import{h as Pe}from"./quantityFormatUtils-oYgdvR_2.js";import{g as be,_ as is,m as rs}from"./Segment-TQS1M_Ix.js";import{a as ns}from"./Object3DVisualElement-8HoU366x.js";import"./measurementUtils-69EiqRp6.js";import"./VisualElement--2Scr6Yq.js";import"./TextOverlayItem-YHZxWGyg.js";function $e(t,e,s,i,r){Me(U,t),Y(F,t,e),q(U,s,U,r),q(F,s,F,r),E(i,F,U),Ve(i,i)}const U=p(),F=p();class os{get numVertices(){return this._length}get hasStagedVertex(){return this._hasCursorPoint}constructor(e,s){this.validMeasurement=!1,this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.areaCentroidWorldCoords=p(),this.areaCentroidRenderCoords=p(),this.geodesicAreaCentroidRenderCoords=p(),this.area=null,this.geodesicArea=null,this.pathLength=null,this.geodesicPathLength=null,this.perimeterLength=null,this._length=0,this._centroidRenderCoords=p(),this._planeWorldCoords=ze(),this._worldUp=p(),this._worldTangent=p(),this._frame=[p(),p(),p()],this._pathVersion=-1,this._hasCursorPoint=!1,this._mode=null,this._tempU=p(),this._tempV=p(),this._tempVec3=p(),this._tempSphere={center:p(),radius:0},this._sceneView=e,this.unitNormalizer=s}update(e,s,i,r,n,o){const l=s!=null,h=this._pathVersion===e.version,u=this._hasCursorPoint===l,c=this._mode===n;return!(h&&!o&&u&&c&&e.isValidPolygon)&&(this._pathVersion=e.version,this._hasCursorPoint=l,this._updateCursorSegmentLength(e,s),this._update(e,s,i,r,n),!0)}_update(e,s,i,r,n){const o=this.unitNormalizer,l=this._sceneView.renderSpatialReference,h=this.unitNormalizer.spatialReference;let u=e.numVertices;const c=!(s==null||s.equals(e.lastPoint)||u>2&&s.equals(e.firstPoint));c&&(u+=1);const g=!e.polygonIsClosed&&u>2,m=e.polygonIsClosed||g;this._resize(u);const y=Z(i.spatialReference),b=xe(i.spatialReference,y)&&Oe(i.spatialReference),{positionsGeographic:C,positionsWorldCoords:A,positionsRenderCoords:$,positionsSpherical:G}=this,O=(f,v)=>{as(i.elevationProvider,f),Q(f,A[v],h),Q(f,$[v],l),b&&(Ne(f,C[v]),Q(f,G[v],y),Ve(G[v],G[v]))};e.forEachVertexPosition((f,v)=>O(f,v)),c&&O(s,u-1);const S=this._updatePathLengths(m);if(this.pathLength=this._length>1?I(o.normalizeDistance(S),"meters"):null,b){const f=this._updateGeodesicPathLengths(m,h);this.geodesicPathLength=this._length>1?I(f,"meters"):null}else this.geodesicPathLength=null;if(this._updateMode(n),!m)return this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),void(this.validMeasurement=!1);this._updateAreaAndPerimeterLength(i,o,l,h,r),b&&this._updateGeodesicArea(i),this.validMeasurement=!0}getData(){return{validMeasurement:this.validMeasurement,numVertices:this.numVertices,hasStagedVertex:this.hasStagedVertex,positionsWorldCoords:this.positionsWorldCoords,positionsRenderCoords:this.positionsRenderCoords,positionsProjectedWorldCoords:this.positionsProjectedWorldCoords,positionsFittedRenderCoords:this.positionsFittedRenderCoords,positionsGeographic:this.positionsGeographic,positionsSpherical:this.positionsSpherical,positionsStereographic:this.positionsStereographic,pathSegmentLengths:this.pathSegmentLengths,geodesicPathSegmentLengths:this.geodesicPathSegmentLengths,perimeterSegmentLengths:this.perimeterSegmentLengths,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidWorldCoords:this.areaCentroidWorldCoords,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,fittingMode:this.fittingMode,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,unitNormalizer:this.unitNormalizer,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(p()),this.positionsRenderCoords.push(p()),this.positionsProjectedWorldCoords.push(ne()),this.positionsFittedRenderCoords.push(p()),this.positionsGeographic.push(p()),this.positionsSpherical.push(p()),this.positionsStereographic.push(ne()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const s=this.positionsWorldCoords,i=this.pathSegmentLengths;let r=0;for(let n=0;n<this._length;++n){const o=i[n]=Ie(s[n],s[(n+1)%this._length]);(n<this._length-1||e)&&(r+=o)}return r}_updateGeodesicPathLengths(e,s){const i=this.positionsGeographic,r=this.geodesicPathSegmentLengths;let n=0;for(let o=0;o<this._length;++o){const l=r[o]=qt(i[o],i[(o+1)%this._length],s??void 0);(o<this._length-1||e)&&(n+=l)}return n}_updateAreaAndPerimeterLength(e,s,i,r,n){const o=e.renderCoordsHelper,l=this.positionsWorldCoords,h=this.positionsRenderCoords,u=this.positionsProjectedWorldCoords,c=this.positionsFittedRenderCoords,g=this._planeWorldCoords,m=this._centroidRenderCoords;se(h,m),o.worldUpAtPosition(m,this._worldUp),o.worldBasisAtPosition(m,Te.X,this._worldTangent),$e(m,this._worldUp,i,this._worldUp,r),$e(m,this._worldTangent,i,this._worldTangent,r),l.length>2&&Ht(l,g),this.fittingMode=this._selectFittingMode(g,l,this._worldUp,n);let y=0;if(this.fittingMode==="horizontal"){let S=-1/0;h.forEach((f,v)=>{const re=o.getAltitude(h[v]);re>S&&(S=re,y=v)})}const b=l[y];let C=g,A=this._worldTangent;this.fittingMode==="horizontal"?C=this._worldUp:this.fittingMode==="vertical"&&(C=this._tempVec3,A=this._worldUp,oe(g,this._worldUp,C)),Me(this._frame[2],C),oe(A,C,this._frame[0]),Ee(this._frame[1],this._frame[0],this._frame[2]),je(this._frame[1],this._frame[1]);const $=this._tempVec3,G=this._tempU,O=this._tempV;for(let S=0;S<this._length;++S){const f=u[S],v=c[S];E($,l[S],b),ae(f,D(this._frame[0],$),D(this._frame[1],$)),K(G,this._frame[0],f[0]),K(O,this._frame[1],f[1]),Y($,G,O),Y($,$,b),q($,r,v,i)}this.perimeterLength=this._length>0?I(s.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,se(c,this.areaCentroidRenderCoords),q(this.areaCentroidRenderCoords,i,this.areaCentroidWorldCoords,r),this._updateIntersectingSegments(),this.area=this.intersectingSegments.size===0?le(s.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const{renderCoordsHelper:s,spatialReference:i}=e,{positionsSpherical:r,positionsStereographic:n}=this,o=this._tempVec3,l=Nt(r,o);if(!l)return void(this.geodesicArea=null);const h=this._tempU,u=this._tempV;We(o,h,u);for(let c=0;c<this._length;++c){const g=D(r[c],h),m=D(r[c],u),y=D(r[c],o);ae(n[c],g/y,m/y)}K(o,o,ke(i).radius),s.toRenderCoords(o,Z(i),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=l&&this.geodesicIntersectingSegments.size===0?le(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,s=this.perimeterSegmentLengths;let i=0;for(let r=0;r<this._length;++r)i+=s[r]=Ue(e[r],e[(r+1)%this._length]);return i}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,s=this.intersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],o=e[(i+1)%this._length],l=e[r],h=e[(r+1)%this._length];he(n,o,l,h)&&(s.add(i),s.add(r))}}_computeArea(){const e=this.positionsProjectedWorldCoords,s=this.triangleIndices=de(we(e));let i=0;for(let r=0;r<s.length;r+=3)i+=Fe(e[s[r]],e[s[r+1]],e[s[r+2]]);return i}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,s=this.geodesicIntersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],o=e[(i+1)%this._length],l=e[r],h=e[(r+1)%this._length];he(n,o,l,h)&&(s.add(i),s.add(r))}}_computeGeodesicArea(){const e=this.positionsGeographic,s=this.positionsStereographic,i=this.geodesicTriangleIndices=de(we(s));let r=0;for(let n=0;n<i.length;n+=3)r+=Bt(e[i[n]],e[i[n+1]],e[i[n+2]],qe.WGS84);return r}_selectFittingMode(e,s,i,r){const n=s.map(c=>Math.abs(Jt(e,c))).reduce((c,g)=>Math.max(c,g),0);Xt(s,this._tempSphere);const o=n/(2*this._tempSphere.radius),l=o<r.maxRelativeErrorCoplanar,h=o<r.maxRelativeErrorAlmostCoplanar;let u="horizontal";return l?u="oblique":h&&(u=Math.abs(D(i,e))>Math.cos(He(r.verticalAngleThreshold))?"horizontal":"vertical"),u}_updateCursorSegmentLength(e,s){const i=e.lastPoint;e.isValidPolygon||i==null||s==null?(this.geodesicStagedSegmentLength=null,this.stagedSegmentLength=null):(this.geodesicStagedSegmentLength=I(Kt(i,s),"meters"),this.stagedSegmentLength=I(this.unitNormalizer.normalizeDistance(Qt(i,s,this.unitNormalizer.spatialReference)),"meters"))}_updateMode(e){if(e===te.Auto){this.actualMeasurementMode="euclidean";let s=0;this.geodesicPathLength!=null&&(s+=this.geodesicPathLength.value),s>ls&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=e===te.Euclidean?"euclidean":"geodesic";this.geodesicPathLength==null&&(this.actualMeasurementMode="euclidean"),this._mode=e}}function as(t,e){e.hasZ||(e.z=Be(t,e,"ground")??0)}const ls=1e5;let R=class extends ie{constructor(t){super(t)}initialize(){const t=this.view.spatialReference,e=Z(t),s=e===Je?Xe:e,i=!t||xe(t,s)?s:t,r=new Yt(i);this._measurementDataManager=new os(this.view,r),this.addHandles([this.analysisViewData.path.on("change",()=>this._update()),z(()=>this.analysisViewData.stagedPoint,()=>this._update(),ce),z(()=>this.analysisViewData.mode,()=>this._update(),ce)]),this._update()}_update(t=!1){const{analysisViewData:e,view:s}=this,i={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80};this._measurementDataManager.update(e.path,e.stagedPoint,s,i,e.mode,t)&&(e.measurementData=this._measurementDataManager.getData())}};a([d({constructOnly:!0})],R.prototype,"view",void 0),a([d({constructOnly:!0})],R.prototype,"analysis",void 0),a([d({constructOnly:!0})],R.prototype,"analysisViewData",void 0),R=a([J("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],R);const De="esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper",hs=Ke.getLogger(De);let w=class extends Qe.EventedAccessor{constructor(t={}){super(t),this._version=0,this._internalGeometryChange=!1,this._extent=ue()}set areaMeasurement(t){this._set("areaMeasurement",t),t!=null&&this.view!=null&&this._initialize(t,this.view)}set view(t){this._set("view",t),t!=null&&this.areaMeasurement!=null&&this._initialize(this.areaMeasurement,t)}get constructed(){return this.areaMeasurement!=null&&this.view!=null}get version(){return this._version}get isEmptyPolygon(){return!this.constructed||this._editGeometry.components.length===0}get isValidPolygon(){return this.constructed&&this.polygonIsClosed}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const t=ue(this._extent);return this.forEachVertex(e=>{Ye(t,e.pos)}),t}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(t,e){this.removeAllHandles(),this.addHandles(z(()=>t.geometry,()=>{this._updateEditGeometryFromModelGeometry(t,e)},ee)),this._makeDirty(!0)}_makeDirty(t=!1){this.notifyChange("polygonIsClosed"),this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),t&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(t,e){if(this._version++,this._internalGeometryChange)return;this.removeHandles("EditGeometry");let s=t.geometry;if(s!=null){const i=Ze(s,e.spatialReference);i==null&&Zt(t,s.spatialReference,hs),s=i}this._editGeometryOperations=s!=null?Se.fromGeometry(s,e.state.viewingMode):new Se(new es("polygon",ts(!0,!1,e.spatialReference))),this._makeDirty(!0),this.emit("change"),this.addHandles(this._editGeometry.on("change",i=>{this._makeDirty(i.addedVertices!=null||i.removedVertices!=null),this._internalGeometryChange=!0,t.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const t=[];return this.forEachVertex(e=>{t.push(e)}),t}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get polygonIsClosed(){return this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get firstPoint(){if(this.constructed&&this._editGeometry.components.length>0){const t=this._editGeometry.components[0].getFirstVertex();if(t!=null)return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}return null}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const t=this._editGeometry.components[0].getLastVertex();if(t!=null)return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}return null}getVertex(t){if(!this.constructed||this._editGeometry.components.length===0||this._editGeometry.components[0].vertices.length===0)return null;const e=this._editGeometry.components[0].vertices[0];let s=e;do{if(s.index===t)return s;s=s.rightEdge.rightVertex}while(s!==e&&s!=null);return null}getVertexPositionAsPoint(t){return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}getVertexPositionAsPointFromIndex(t){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(t).pos)}forEachVertex(t){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(t)}forEachVertexPosition(t){const e=this._editGeometry.coordinateHelper;this.forEachVertex((s,i)=>{e.vectorToPoint(s.pos,Ae),t(Ae,i)})}clear(){this.areaMeasurement!=null&&(this.areaMeasurement.geometry=null)}add(t){if(!this.constructed)return null;if(this._editGeometry.components.length===0){const s=this.view;this._editGeometry.components.push(new ss(s.spatialReference,s.state.viewingMode))}const e=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),e}close(){if(!this.constructed||this._editGeometry.components.length===0)return null;const t=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),t}ensureContains(t,e=""){let s=!1;if(this._editGeometry.components.forEach(i=>{i.iterateVertices(r=>{r===t&&(s=!0)})}),!s)throw new Error(`vertex doesnt exist ${e}`);return s}setVertexPosition(t,e){if(!this.constructed)return null;const s=this._editGeometryOperations.setVertexPosition(t,this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),s}equals(t){if(this.numVertices!==t.numVertices)return!1;let e=!0;return this.forEachVertexPosition((s,i)=>{const r=t.getVertexPositionAsPointFromIndex(i);s.equals(r)||(e=!1)}),!!e}};a([d({value:null})],w.prototype,"areaMeasurement",null),a([d({value:null})],w.prototype,"view",null),a([d()],w.prototype,"isEmptyPolygon",null),a([d()],w.prototype,"isValidPolygon",null),a([d()],w.prototype,"extent",null),a([d()],w.prototype,"spatialReference",null),a([d()],w.prototype,"numVertices",null),a([d()],w.prototype,"polygonIsClosed",null),w=a([J(De)],w);const Ae=new et;function Re(t){const e=new tt,{vertex:s,fragment:i}=e;return st(s,t),e.attributes.add(H.POSITION,"vec3"),e.attributes.add(H.UV0,"vec2"),e.varyings.add("vUV","vec2"),t.multipassEnabled&&e.varyings.add("depth","float"),s.code.add(pe`
    void main(void) {
      vUV = uv0;
      ${t.multipassEnabled?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),e.include(it,t),i.uniforms.add(new rt("size",r=>r.size)),i.uniforms.add(new ge("color1",r=>r.color1)),i.uniforms.add(new ge("color2",r=>r.color2)),i.include(nt),i.code.add(pe`
    void main() {
      ${t.multipassEnabled?"terrainDepthTest(depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      fragColor = mix(color2, color1, t);
      ${t.transparencyPassType===j.Color?"fragColor = premultiplyAlpha(fragColor);":""}
    }
  `),e}const ds=Object.freeze(Object.defineProperty({__proto__:null,build:Re},Symbol.toStringTag,{value:"Module"}));class X extends ht{initializeProgram(e){return new dt(e.rctx,X.shader.get().build(this.configuration),ct)}_setPipelineState(e){const s=this.configuration,i=e===j.NONE,r=e===j.FrontFace;return ut({blending:s.transparent?i?us:pt(e):null,depthTest:{func:gt(e)},depthWrite:i?s.writeDepth?mt:null:_t(e),colorWrite:yt,polygonOffset:i||r?s.polygonOffset?cs:null:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}X.shader=new ot(ds,()=>at(()=>Promise.resolve().then(()=>vs),void 0));const cs={factor:0,units:-25},us=lt(W.SRC_ALPHA,W.ONE,W.ONE_MINUS_SRC_ALPHA,W.ONE_MINUS_SRC_ALPHA);class M extends ft{constructor(){super(...arguments),this.transparencyPassType=j.NONE,this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.multipassEnabled=!1,this.cullAboveGround=!1}}a([V({count:j.COUNT})],M.prototype,"transparencyPassType",void 0),a([V()],M.prototype,"transparent",void 0),a([V()],M.prototype,"writeDepth",void 0),a([V()],M.prototype,"polygonOffset",void 0),a([V()],M.prototype,"multipassEnabled",void 0),a([V()],M.prototype,"cullAboveGround",void 0),a([V({constValue:!1})],M.prototype,"occlusionPass",void 0);class ps extends vt{constructor(e){super(e,new ms),this._configuration=new M}getConfiguration(e,s){return this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.transparencyPassType=s.transparencyPassType,this._configuration.multipassEnabled=s.multipassEnabled,this._configuration.cullAboveGround=s.multipassTerrain.cullAboveGround,this._configuration}produces(e,s){return s===me.Color||s===me.Alpha?e===(this.parameters.transparent?this.parameters.writeDepth?k.TRANSPARENT_MATERIAL:k.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:k.OPAQUE_MATERIAL)||e===k.DRAPED_MATERIAL:!1}createGLMaterial(e){return new gs(e)}createBufferWriter(){return new Lt(Ct)}}class gs extends wt{beginSlot(e){return this.ensureTechnique(X,e)}}class ms extends St{constructor(){super(...arguments),this.size=Ge(1,1),this.color1=N(.75,.75,.75,1),this.color2=N(.5,.5,.5,1),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1}}class _s extends ns{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=x.OccludeAndTransparent,this._geometry=null,this._size=Ge(1,1),this._color1=N(1,.5,0,.5),this._color2=N(1,1,1,.5),this.applyProperties(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get size(){return this._size}set size(e){Pt(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){_e(e,this._color1)||(ye(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){_e(e,this._color2)||(ye(this._color2,e),this._updateMaterial())}_updateMaterial(){this._checkerBoardMaterial!=null&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new ps({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:x.OccludeAndTransparent,isDecoration:this.isDecoration})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){this._checkerBoardMaterial!=null&&e(this._checkerBoardMaterial)}createGeometries(e){if(this._geometry==null||this._checkerBoardMaterial==null)return;const s=ys;bt(s,this.transform);const i=this._geometry,r=[],n=p();i.position.forEach(h=>{E(n,h,s),r.push(n[0],n[1],n[2])});const o=[];i.uv.forEach(h=>{o.push(h[0],h[1])});const l=new $t(this._checkerBoardMaterial,[[H.POSITION,new fe(r,i.triangleIndices,3,!0)],[H.UV0,new fe(o,i.triangleIndices,2,!0)]]);e.addGeometry(l)}}const ys=p();let L=class extends ie{get _parameters(){const{accentColor:t,textColor:e}=this.view.effectiveTheme,s=At(t),i=ve(t,.5),r=ve(Le(t),.5),n=Le(e,Mt.Low);return{accentColor:s,transparentAccentColor:i,transparentContrastColor:r,intersectingLineColor:[1,.2,0,1],textColor:e,textBackgroundColor:Ce(n,.6),textCalloutColor:Ce(n,.5),pathLineWidth:3,perimeterLineWidth:2,projectionLineWidth:2,projectionLineStippleSize:5,labelDistance:25}}get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,perimeterLength:this._perimeterLengthLabel}}}constructor(t){super(t),this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._origin=p(),this._originTransform=Vt(),this.messages=null,this.viewData=fs,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:t,_parameters:e,view:s}=this;this._path=new T({view:s,attached:!0,width:e.pathLineWidth,polygonOffset:!0,renderOccluded:x.OccludeAndTransparent,isDecoration:!0}),this._intersectedPath=new T({view:s,attached:!0,width:e.pathLineWidth,polygonOffset:!0,renderOccluded:x.OccludeAndTransparent,isDecoration:!0}),this._perimeter=new T({view:s,attached:!0,width:e.perimeterLineWidth,polygonOffset:!0,renderOccluded:x.OccludeAndTransparent,isDecoration:!0}),this._intersectedPerimeter=new T({view:s,attached:!0,width:e.perimeterLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:x.OccludeAndTransparent,isDecoration:!0}),this._projectionLines=new T({view:s,attached:!0,width:e.projectionLineWidth,stipplePattern:xt(e.projectionLineStippleSize),polygonOffset:!0,renderOccluded:x.OccludeAndTransparent,isDecoration:!0}),this._measurementArea=new _s({view:s,attached:!0,isDecoration:!0});const i={attached:!0,view:s,isDecoration:!0};this._areaLabel=new be({...i,fontSize:B.Large}),this._perimeterLengthLabel=new be({...i,fontSize:B.Small}),this.addHandles([z(()=>[t.mode,this.visible,t.unit,t.measurementData,t.stagedPoint],()=>this._update(),ee),z(()=>{var r;return(r=s.state)==null?void 0:r.camera},()=>this._updateLabels(),ee),Gt(()=>this._updateMessageBundle()),z(()=>this._parameters,({accentColor:r,transparentAccentColor:n,transparentContrastColor:o,textColor:l,textBackgroundColor:h,textCalloutColor:u})=>{const{_path:c,_intersectedPath:g,_perimeter:m,_projectionLines:y,_measurementArea:b,_areaLabel:C,_perimeterLengthLabel:A}=this;c.color=r,g.color=r,m.color=r,y.color=r,b.color1=n,b.color2=o,C.textColor=l,C.backgroundColor=h,C.calloutColor=u,A.textColor=l,A.backgroundColor=h,A.calloutColor=u},Dt)]),this._updateMessageBundle()}destroy(){this._measurementArea=P(this._measurementArea),this._path=P(this._path),this._intersectedPath=P(this._intersectedPath),this._perimeter=P(this._perimeter),this._intersectedPerimeter=P(this._intersectedPerimeter),this._areaLabel=P(this._areaLabel),this._perimeterLengthLabel=P(this._perimeterLengthLabel),this._projectionLines=P(this._projectionLines),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:t},analysisViewData:e}=this;t!=null&&(this._updateViewData(t,e.path,e.stagedPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(t,e,s){const i=t.validMeasurement,r=t.actualMeasurementMode==="geodesic",n=r?t.geodesicArea:t.area;let o=1;if(n){const h=this._toPreferredAreaUnit(n,this.analysisViewData.unit);o=Rt(Math.sqrt(h.value)/Math.sqrt(300)),o*=Math.sqrt(zt(1,h.unit,"square-meters")),o/=t.unitNormalizer.normalizeDistance(1)}const l={validMeasurement:i,numVertices:t.numVertices,hasStagedVertex:t.hasStagedVertex,path:e,pathVersion:e.version,stagedPoint:s,measurementData:t,mode:t.actualMeasurementMode,positionsGeographic:t.positionsGeographic,positionsRenderCoords:t.positionsRenderCoords,positionsProjected:t.positionsProjectedWorldCoords,positionsFittedRenderCoords:t.positionsFittedRenderCoords,intersectingSegments:r?t.geodesicIntersectingSegments:t.intersectingSegments,triangleIndices:r?t.geodesicTriangleIndices:t.triangleIndices,fittingMode:t.fittingMode,areaCentroid:r?t.geodesicAreaCentroidRenderCoords:t.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:i?0:e.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:o};this._set("viewData",l)}_updateOrigin(){const t=this.viewData;se(t.positionsRenderCoords,this._origin),Ot(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(t){const e=this.viewData,s=this.view.renderCoordsHelper.spatialReference,i=e.mode,r=[],n=[],o=[],l=e.numVertices,h=e.validMeasurement?l:l-1;for(let c=0;c<h;++c){const g=e[t][c],m=e[t][(c+1)%l];let y=null;switch(i){case"euclidean":y=new rs(g,m);break;case"geodesic":y=new is(g,m,s)}e.intersectingSegments.has(c)?o.push(y):n.push(y),r.push(y)}let u=null;return e.validMeasurement&&e.hasStagedVertex&&h>=2?u=r[r.length-2]:e.hasStagedVertex&&h>=1&&(u=r[r.length-1]),{all:r,nonIntersecting:n,intersecting:o,stagedSegment:u}}_updatePathSegments(){const{visible:t}=this,e=this._createSegments("positionsRenderCoords");this._path.setGeometryFromSegments(e.nonIntersecting,this._origin),this._path.visible=t,this._intersectedPath.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPath.visible=t,this._pathSegments=e.all}_updatePerimeterSegments(){const t=this.visible&&this.viewData.mode==="euclidean",e=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(e.nonIntersecting,this._origin),this._perimeter.visible=t,this._intersectedPerimeter.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPerimeter.visible=t,this._perimeterSegments=e.all}_updateArea(){const t=this.viewData;switch(t.mode){case"euclidean":this._updateAreaEuclidean(t);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(t){const e=this.visible;t.validMeasurement&&t.intersectingSegments.size===0&&t.triangleIndices?(this._measurementArea.geometry={uv:t.positionsProjected,position:t.positionsFittedRenderCoords,triangleIndices:t.triangleIndices},this._measurementArea.size=[t.checkerSize,t.checkerSize],this._measurementArea.visible=e):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const t=this.viewData,e=this.visible,s=t.mode,i=t.numVertices;if(i>0&&t.validMeasurement&&s==="euclidean"){const r=[];for(let n=0;n<i;++n){const o=p();E(o,t.positionsRenderCoords[n],this._origin);const l=p();E(l,t.positionsFittedRenderCoords[n],this._origin),r.push([o,l])}this._projectionLines.geometry=r,this._projectionLines.visible=e}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:t}=this,{measurementData:e,mode:s,path:i}=t;if(!i)return;const r=this.visible,n=this._formatAreaLabel(this.messages,s==="geodesic"?e.geodesicArea:e.area,this.analysisViewData.unit);if(n!=null?(this._areaLabel.geometry={type:"point",point:t.areaCentroid},this._areaLabel.text=n,this._areaLabel.visible=t.validMeasurement&&t.intersectingSegments.size===0&&r):this._areaLabel.visible=!1,this._set("areaLabel",n),t.validMeasurement&&t.intersectingSegments.size===0){const o=t.mode==="geodesic",l=o?e.geodesicPathLength:e.validMeasurement?e.perimeterLength:e.pathLength,h=this._formatLengthLabel(this.messages,l,this.analysisViewData.unit);this._set("perimeterLengthLabel",h),this._perimeterLengthLabel.distance=this._parameters.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=h,this._perimeterLengthLabel.visible=!0;let u=!0;for(let c=0;c<t.numVertices;++c){const g=(t.perimeterLengthLabelSegmentIndex+c)%t.numVertices,m=o||!e.validMeasurement?this._pathSegments[g]:this._perimeterSegments[g];if(u=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:m,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;u=!1}this._perimeterLengthLabel.visible=u&&r}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(t,e){return It(t,this._preferredAreaUnit(t,e))}_preferredAreaUnit(t,e){switch(e){case"metric":return Et(t.value,t.unit);case"imperial":return Tt(t.value,t.unit);default:return e}}_preferredLengthUnit(t,e){const s=this._deriveLengthUnitFromAreaUnit(e);switch(s){case"metric":return Wt(t.value,t.unit);case"imperial":return jt(t.value,t.unit);default:return s}}_deriveLengthUnitFromAreaUnit(t){switch(t){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(t,e,s){return t&&e&&Pe(t,e,this._preferredAreaUnit(e,s))}_formatLengthLabel(t,e,s){return t&&e&&Pe(t,e,this._preferredLengthUnit(e,s))}_updateMessageBundle(){this.loadingMessages=!0,kt("esri/core/t9n/Units").then(t=>{this.messages=t,this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};var B;a([d()],L.prototype,"_parameters",null),a([d()],L.prototype,"view",void 0),a([d()],L.prototype,"messages",void 0),a([d()],L.prototype,"analysis",void 0),a([d()],L.prototype,"viewData",void 0),a([d()],L.prototype,"analysisViewData",void 0),a([d({readOnly:!0})],L.prototype,"areaLabel",void 0),a([d({readOnly:!0})],L.prototype,"perimeterLengthLabel",void 0),a([d()],L.prototype,"loadingMessages",void 0),a([d()],L.prototype,"visible",null),L=a([J("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],L),function(t){t[t.Small=12]="Small",t[t.Large=16]="Large"}(B||(B={}));const fs={validMeasurement:!1,numVertices:0,hasStagedVertex:!1,path:null,pathVersion:-1,stagedPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null};let _=class extends Ft(ie){constructor(t){super(t),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.stagedPoint=null,this.mode=te.Auto}initialize(){const{analysis:t,view:e}=this;this.path=new w({view:e,areaMeasurement:t}),this.analysisVisualization=new L({view:e,analysis:t,analysisViewData:this}),this.analysisController=new R({view:e,analysis:t,analysisViewData:this})}destroy(){this.analysisController=P(this.analysisController),this.analysisVisualization=P(this.analysisVisualization),this.path.destroy()}get updating(){var t;return!!((t=this.analysisVisualization)!=null&&t.loadingMessages)}get result(){const{measurementData:t}=this;return t==null?{area:null,mode:null,perimeter:null}:t.actualMeasurementMode==="euclidean"?{area:t.area,perimeter:t.perimeterLength,mode:"euclidean"}:{area:t.geodesicArea,perimeter:t.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return this.analysis.unit??this._defaultUnit}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};a([d({readOnly:!0})],_.prototype,"type",void 0),a([d({constructOnly:!0,nonNullable:!0})],_.prototype,"analysis",void 0),a([d()],_.prototype,"updating",null),a([d()],_.prototype,"analysisVisualization",void 0),a([d()],_.prototype,"analysisController",void 0),a([d()],_.prototype,"result",null),a([d()],_.prototype,"measurementData",void 0),a([d()],_.prototype,"viewData",null),a([d()],_.prototype,"validMeasurement",null),a([d()],_.prototype,"path",void 0),a([d()],_.prototype,"lastDraggedVertex",void 0),a([d()],_.prototype,"stagedPoint",void 0),a([d()],_.prototype,"mode",void 0),a([d()],_.prototype,"unit",null),a([d(Ut)],_.prototype,"_defaultUnit",void 0),_=a([J("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],_);const zs=_,vs=Object.freeze(Object.defineProperty({__proto__:null,build:Re},Symbol.toStringTag,{value:"Module"}));export{zs as default};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}