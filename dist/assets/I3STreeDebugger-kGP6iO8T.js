import{dY as d,ha as S,b3 as a,gk as u,hb as r,j as b,e as p,y as c,c as g,bT as j,a8 as v}from"./index-pCX-0tJH.js";import{d as m}from"./TileTreeDebugger-MxH50s1q.js";let h=class extends m{constructor(o){super(o)}getTiles(){const o=this.lv.getVisibleNodes(),t=this.view.renderSpatialReference,i=this.nodeSR;return o.map(l=>y(l,t,i)).filter(d).sort((l,s)=>l.lij[0]===s.lij[0]?l.label>s.label?-1:1:l.lij[0]-s.lij[0])}};function y(o,t,i){const l=o.serviceObb;if(l==null||t==null)return null;S(n,l.quaternion),a(e,l.center),u(e,i,0,e,t,0,1),n[12]=e[0],n[13]=e[1],n[14]=e[2];const s=[[],[],[]];a(e,l.halfSize),r(e,e,n),u(e,t,0,e,i,0,1),s[0].push([e[0],e[1]]),a(e,l.halfSize),e[0]=-e[0],r(e,e,n),u(e,t,0,e,i,0,1),s[0].push([e[0],e[1]]),a(e,l.halfSize),e[0]=-e[0],e[1]=-e[1],r(e,e,n),u(e,t,0,e,i,0,1),s[0].push([e[0],e[1]]),a(e,l.halfSize),e[1]=-e[1],r(e,e,n),u(e,t,0,e,i,0,1),s[0].push([e[0],e[1]]),s[1].push(s[0][0]),s[1].push(s[0][1]),a(e,l.halfSize),e[0]=-e[0],e[2]=-e[2],r(e,e,n),u(e,t,0,e,i,0,1),s[1].push([e[0],e[1]]),a(e,l.halfSize),e[2]=-e[2],r(e,e,n),u(e,t,0,e,i,0,1),s[1].push([e[0],e[1]]),s[2].push(s[0][0]),s[2].push(s[0][3]),a(e,l.halfSize),e[1]=-e[1],e[2]=-e[2],r(e,e,n),u(e,t,0,e,i,0,1),s[2].push([e[0],e[1]]),s[2].push(s[1][3]);const f=new b({rings:s,spatialReference:i});return{lij:[o.level,o.childCount,0],label:o.id,geometry:f}}p([c({constructOnly:!0})],h.prototype,"lv",void 0),p([c({constructOnly:!0})],h.prototype,"nodeSR",void 0),h=p([g("esri.views.3d.layers.support.I3STreeDebugger")],h);const n=j(),e=v();export{h as I3STreeDebugger};
