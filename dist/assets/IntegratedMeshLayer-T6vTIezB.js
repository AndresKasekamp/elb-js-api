import{iB as w,V as T,bV as _,bW as O,e as s,y as r,c as f,iO as I,em as $,dM as L,dN as x,dO as b,dP as M,en as N,fl as j,C as A,hh as E,dQ as P,iP as h,E as d,iQ as m,iR as V,Z as u,iS as D,ip as J,iq as U,ir as K,is as R,eb as C,dt as z,iH as H,c7 as Q}from"./index-J0iiHjMT.js";import{f as l}from"./SceneModification-dyp2M_Yg.js";var a;let n=a=class extends w(T.ofType(l)){constructor(e){super(e),this.url=null}clone(){return new a({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(t=>t.toJSON(e)).filter(t=>!!t.geometry)}static fromJSON(e,t){const o=new a;for(const p of e)o.add(l.fromJSON(p,t));return o}static async fromUrl(e,t,o){const p={url:_(e),origin:"service"},g=await O(e,{responseType:"json",signal:o==null?void 0:o.signal}),S=t.toJSON(),y=[];for(const c of g.data)y.push(l.fromJSON({...c,geometry:{...c.geometry,spatialReference:S}},p));return new a({url:e,items:y})}};s([r({type:String})],n.prototype,"url",void 0),n=a=s([f("esri.layers.support.SceneModifications")],n);const v=n;let i=class extends I($(L(x(b(M(N(Q))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.path=null}initialize(){this.addHandles(j(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,A))}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readModifications(e,t,o){this._modificationsSource={url:E(e,o),context:o}}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=e==null?void 0:e.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(o){P(o)}if(await this._fetchService(t),this._modificationsSource!=null){const o=await v.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",o,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,t){return this._debouncedSaveOperations(h.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(h.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new d("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new d("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new d("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(){const e=this.elevationInfo,t="Integrated mesh layers";m(u.getLogger(this),V(t,"absolute-height",e)),m(u.getLogger(this),D(t,e))}};s([r({type:String,readOnly:!0})],i.prototype,"geometryType",void 0),s([r({type:["show","hide"]})],i.prototype,"listMode",void 0),s([r({type:["IntegratedMeshLayer"]})],i.prototype,"operationalLayerType",void 0),s([r({json:{read:!1},readOnly:!0})],i.prototype,"type",void 0),s([r({type:J,readOnly:!0})],i.prototype,"nodePages",void 0),s([r({type:[U],readOnly:!0})],i.prototype,"materialDefinitions",void 0),s([r({type:[K],readOnly:!0})],i.prototype,"textureSetDefinitions",void 0),s([r({type:[R],readOnly:!0})],i.prototype,"geometryDefinitions",void 0),s([r({readOnly:!0})],i.prototype,"serviceUpdateTimeStamp",void 0),s([r({type:v}),C({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],i.prototype,"modifications",void 0),s([z(["web-scene","portal-item"],"modifications")],i.prototype,"readModifications",null),s([r(H)],i.prototype,"elevationInfo",null),s([r({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),i=s([f("esri.layers.IntegratedMeshLayer")],i);const F=i;export{F as default};
