import{fo as n,P as p,K as l,e,y as i,fd as m,c as d}from"./index-pCX-0tJH.js";import{E as c}from"./I3SMeshView3D-frxYFPRW.js";import{n as u}from"./LayerView3D-57OghbRh.js";import{u as h}from"./LayerView-ixwLVnzr.js";import"./I3SOverrides-XXafrk1K.js";import"./I3SNode-A9aOJfXV.js";import"./ReactiveSet-_4-UpKXZ.js";import"./meshFeatureSet-42GYfSGc.js";import"./External-Pb5poJ0S.js";import"./FeatureLayerView3D-vzwVkoh-.js";import"./FeatureLayerViewBase3D-W0Qwl4g_.js";import"./HeatmapDensity.glsl-de3m0xZZ.js";import"./dehydratedFeatureComparison-IJSogXWn.js";import"./queryForSymbologySnapping-MXWRIdj-.js";import"./hash-SS5GKVPY.js";import"./Graphics3DObjectStates-JUKhPt0b.js";import"./optimizedFeatureQueryEngineAdapter-46ccFTR0.js";import"./PooledRBush-rhLtoPG7.js";import"./quickselect-0UUnLNDW.js";import"./QueryEngine-uvDs-vBe.js";import"./WhereClause-FOYoIAAW.js";import"./TimeOnly-gkehHHJx.js";import"./json-v6EOeNTY.js";import"./QueryEngineCapabilities-PzVpW5yD.js";import"./utils-jVYIoPxv.js";import"./generateRendererUtils-3JJTfr19.js";import"./FeatureStore-PXMUgn0j.js";import"./BoundsStore-_-dPK5c-.js";import"./projectExtentUtils-Q4rXasWA.js";import"./EventedSet-TJfupI82.js";import"./FeatureEffect-0Jn9Z0sQ.js";import"./RefreshableLayerView-DVYs7L04.js";import"./SceneModification-E4lNPbBQ.js";import"./SceneLayerWorker-fjNBmTGi.js";const g=.2;let r=class extends c(u(h)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?g:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new l;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};e([i()],r.prototype,"layer",void 0),e([i()],r.prototype,"i3slayer",null),e([i(m)],r.prototype,"updatingProgress",void 0),e([i()],r.prototype,"updatingProgressValue",null),e([i()],r.prototype,"lodFactor",null),e([i({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=e([d("esri.views.3d.layers.SceneLayerView3D")],r);const U=r;export{U as default};
