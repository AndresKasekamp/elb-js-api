import{ft as n,P as p,S as m,e as i,y as e,fi as l,c as d}from"./index-J0iiHjMT.js";import{E as c}from"./I3SMeshView3D-OXYwZo0p.js";import{n as u}from"./LayerView3D-iOx2MD1g.js";import{u as h}from"./LayerView-efDufa6j.js";import"./I3SOverrides-5dCbMm3h.js";import"./I3SNode-5SPByfpU.js";import"./ReactiveSet-HLstcUcf.js";import"./meshFeatureSet-Mcou8mDC.js";import"./External-GV0jSEES.js";import"./FeatureSet-d4S1oKME.js";import"./FeatureLayerView3D-t6NDkLO0.js";import"./FeatureLayerViewBase3D-VurTj7t3.js";import"./HeatmapDensity.glsl-y7dUg--m.js";import"./dehydratedFeatureComparison-hdPq-zad.js";import"./queryForSymbologySnapping-I1fFQTD_.js";import"./hash-SS5GKVPY.js";import"./Graphics3DObjectStates--mMi4sdi.js";import"./optimizedFeatureQueryEngineAdapter-KnoSHZzG.js";import"./PooledRBush-o8tLYBG5.js";import"./quickselect-UFB0jJTZ.js";import"./QueryEngine-8tLWlkSE.js";import"./WhereClause-XAMIZ4-B.js";import"./TimeOnly-ljWtUK7N.js";import"./json-v6EOeNTY.js";import"./QueryEngineCapabilities-PzVpW5yD.js";import"./utils-P5wTOmqv.js";import"./generateRendererUtils-_1jVE02H.js";import"./FeatureStore-X-AIJLo2.js";import"./BoundsStore-wmwfHjhp.js";import"./projectExtentUtils-TwA6ooHn.js";import"./query-rG0aX6cE.js";import"./pbfQueryUtils-pWizwTQZ.js";import"./pbf-o0zzptPp.js";import"./queryZScale-IaMm02_2.js";import"./EventedSet-JGlFrfoR.js";import"./FeatureEffect-5bEV-xG1.js";import"./RefreshableLayerView-Pd4dLcWr.js";import"./SceneModification-dyp2M_Yg.js";import"./SceneLayerWorker-o7OZRrjZ.js";const g=.2;let r=class extends c(u(h)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?g:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new m;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(l)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([d("esri.views.3d.layers.SceneLayerView3D")],r);const rt=r;export{rt as default};
