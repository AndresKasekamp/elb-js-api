import{l as G,ar as k,aa as l,as as x,at as b,au as v,av as y,aw as z,ax as M,ay as w,az as C,aA as m,aB as P,aC as h,aD as E,aE as g,aF as d,aG as R,aH as q}from"./index-J0iiHjMT.js";function W(t,n){const e=n.center;x(e,0,0,0);for(let a=0;a<t.length;++a)b(e,e,t[a]);v(e,e,1/t.length);let s=0;for(let a=0;a<t.length;++a)s=Math.max(s,y(e,t[a]));n.radius=Math.sqrt(s)}function j(t,n){if(t.length<3)throw new Error("need at least 3 points to fit a plane");z(t[0],t[1],t[2],n)}function A(t,n){return M(t,n)+t[3]}function B(t,n,e){return w(t,f,e)&&w(n,i,e)?C(f,i):0}function D(t,n){if(!m(t,f)||!m(n,i))return 0;const e=new q;return P(e,[f[0],f[1]],[i[0],i[1]]),e.distance}function F(t,n,e){const s=new q;return P(s,[t[0],t[1]],[n[0],n[1]],e),s.distance}function H(t,n,e,s){const a=S;return h(t,s,f)&&h(n,s,i)&&h(e,s,p)?(a.setPoint(0,0,f),a.setPoint(0,1,i),a.setPoint(0,2,p),Math.abs(E(a,"square-meters"))):0}function L(t,n=null,e=!0){const a=(u,o)=>{if(o[0]===0&&o[1]===0&&o[2]===0)return!1;for(let c=0;c<u.length;++c)if(M(o,u[c])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return n&&g(n,t[0]),!0;x(r,0,0,0);for(let u=0;u<t.length;++u)b(r,r,t[u]);if(d(r,r),a(t,r))return n&&g(n,r),!0;if(!e)return!1;for(let u=0;u<t.length;++u)for(let o=0;o<t.length;++o)if(u!==o&&(R(r,t[u],t[o]),d(r,r),a(t,r)))return n&&g(n,r),!0;return!1}function U(t){return t.pointerType!=="mouse"||t.button===0}const f=l(),i=l(),p=l(),S=new G({rings:[[f,i,p]],spatialReference:k.WGS84}),r=l();export{H as G,B as L,L as M,D as S,F as T,U as W,W as b,j as d,A as w};
