import{j as k,d2 as y,a8 as c,bz as w,bO as x,ca as z,d3 as G,d4 as L,c9 as M,d5 as b,by as R,d6 as p,d7 as P,d8 as d,d9 as S,b3 as h,bL as m,c6 as T,da as q}from"./index-pCX-0tJH.js";function v(t,n){const e=n.center;w(e,0,0,0);for(let r=0;r<t.length;++r)x(e,e,t[r]);z(e,e,1/t.length);let a=0;for(let r=0;r<t.length;++r)a=Math.max(a,G(e,t[r]));n.radius=Math.sqrt(a)}function C(t,n){if(t.length<3)throw new Error("need at least 3 points to fit a plane");L(t[0],t[1],t[2],n)}function E(t,n){return M(t,n)+t[3]}function O(t,n,e){return b(t,f,e)&&b(n,i,e)?R(f,i):0}function U(t,n){if(!p(t,f)||!p(n,i))return 0;const e=new q;return P(e,[f[0],f[1]],[i[0],i[1]]),e.distance}function _(t,n,e){const a=new q;return P(a,[t[0],t[1]],[n[0],n[1]],e),a.distance}function A(t,n,e,a){const r=W;return d(t,a,f)&&d(n,a,i)&&d(e,a,g)?(r.setPoint(0,0,f),r.setPoint(0,1,i),r.setPoint(0,2,g),Math.abs(S(r,"square-meters"))):0}function B(t,n=null,e=!0){const r=(u,o)=>{if(o[0]===0&&o[1]===0&&o[2]===0)return!1;for(let l=0;l<u.length;++l)if(M(o,u[l])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return n&&h(n,t[0]),!0;w(s,0,0,0);for(let u=0;u<t.length;++u)x(s,s,t[u]);if(m(s,s),r(t,s))return n&&h(n,s),!0;if(!e)return!1;for(let u=0;u<t.length;++u)for(let o=0;o<t.length;++o)if(u!==o&&(T(s,t[u],t[o]),m(s,s),r(t,s)))return n&&h(n,s),!0;return!1}function D(t){return t.pointerType!=="mouse"||t.button===0}const f=c(),i=c(),g=c(),W=new k({rings:[[f,i,g]],spatialReference:y.WGS84}),s=c();export{A as G,O as L,B as M,U as S,_ as T,D as W,v as b,C as d,E as w};
