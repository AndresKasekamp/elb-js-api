import{K as D,p as G,k as z,no as H,L as $,np as L,O as A,d as g,nn as U,n as _,nq as q,hN as B,bI as Y,Y as j,ao as T,e as a,nr as K,A as V,y as p,c as N,c4 as Q,aR as b,bB as R,ns as E,an as F,aO as X,T as m,nt as M,nu as J,nv as ee,aa as d,gr as O,nw as x,au as te,ax as ie,aU as ne,aF as se,aG as re,nx as oe,ny as ae,gq as C,e3 as pe}from"./index-J0iiHjMT.js";import{r as I}from"./dehydratedFeatureComparison-hdPq-zad.js";import{w as le,V as he,p as ce,l as de}from"./EditGeometryOperations-TPE5Wzab.js";import{d as w,C as ue}from"./InteractiveToolBase-WDic4GPF.js";import{e as P}from"./SnappingContext-6K6JmvvY.js";import{f as ge}from"./SnappingDragPipelineStep-THHIXt-p.js";import{p as me}from"./SnappingOperation-2U48wt1k.js";const Ie=["freehand","hybrid","click"],Z="click";class ve{constructor({grabbableForEvent:e}){this.events=new D,this.interactive=!0,this.selectable=!1,this.cursor=null,this.grabbable=!0,this.consumesClicks=!0,this.grabbableForEvent=e}destroy(){}intersectionDistance(e,i){return 0}attach(){}detach(){}onElevationChange(){}onViewChange(){}}const ye="crosshair",fe="progress";let o=class extends D.EventedMixin(G){constructor(t){super(t),this._createOperationCompleted=!1,this._hideDefaultCursor=!1,this._pointerDownStates=new Set,this._stagedScreenPoint=null,this._stagedPointerType=null,this._stagedPointerId=null,this._updatingHandles=new z,this.constraint=void 0,this.isDraped=!0,this.labelOptions=new H,this.tooltipOptions=new $,this.cursor=null,this.loading=!1,this.snapToSceneEnabled=null,this.lastVertex=null,t.elevationInfo==null&&(this.elevationInfo=L(!!t.hasZ))}initialize(){const{geometryType:t,view:e}=this,i=e.spatialReference,n="viewingMode"in e.state?e.state.viewingMode:A.Local,l=t==="segment"||t==="multipoint"?"polyline":t;this.coordinateHelper=le(this.hasZ,this.hasM,i),this._editGeometryOperations=new he(new ce(l,this.coordinateHelper)),this._snappingOperation=new me({view:e,constrainResult:s=>{var r;return s?(r=this._getEffectiveDrawSurface())==null?void 0:r.constrainZ(s):void 0}}),this.addHandles([g(()=>this.stagedVertex,s=>{s!=null&&this.emit("cursor-update",{updated:null,vertices:[{componentIndex:0,vertexIndex:this._activeComponent.vertices.length,coordinates:this.coordinateHelper.pointToArray(s)}],operation:"apply",type:"vertex-update"})},{sync:!0,equals:(s,r)=>K(s,r,I)}),g(()=>this.view.viewpoint,(s,r)=>{s&&r&&Q(s,r)&&this._onViewpointChange()})]),this._activeComponent=new de(i,n),this._editGeometryOperations.data.components.push(this._activeComponent);const h=this.segmentLabels;h!=null&&(h.context={view:e,editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,labelOptions:this.labelOptions},this.addHandles([g(()=>this.labelOptions.enabled,s=>{h.visible=s},V),this.on("cursor-update",()=>{const s=this.stagedVertex;h.stagedVertex=s!=null?this.coordinateHelper.pointToVector(s):null})])),this.addHandles(this._editGeometryOperations.on(["vertex-add","vertex-update","vertex-remove"],s=>{const r=s.vertices.map(u=>({componentIndex:0,vertexIndex:u.index,coordinates:this.coordinateHelper.vectorToArray(u.pos)})),y=r.map(u=>u.coordinates);switch(s.type){case"vertex-add":this.emit(s.type,{...s,added:y,vertices:r});break;case"vertex-update":this.emit(s.type,{...s,updated:y,vertices:r});break;case"vertex-remove":this.emit(s.type,{...s,removed:y,vertices:r})}const S=this._activeComponent.getLastVertex(),f=S!=null?this.coordinateHelper.vectorToDehydratedPoint(S.pos):null;f!=null&&this.lastVertex!=null&&I(this.lastVertex,f)||(this.lastVertex=f)}));const c=this._manipulator=new ve({grabbableForEvent:s=>this.drawingMode!=="click"||s.pointerType==="touch"&&this._snappingEnabled&&this._pointerDownStates.size===1});this.manipulators.add(c),c.grabbable=t!=="point",this.addHandles([this._createManipulatorDragPipeline(c),c.events.on("immediate-click",s=>this._onImmediateClick(s)),c.events.on("immediate-double-click",s=>this._onImmediateDoubleClick(s)),g(()=>({effectiveCursor:this.effectiveCursor}),({effectiveCursor:s})=>{c.cursor=s},V)]),U(this,()=>{const s=this.view.inputManager.latestPointerType??"mouse",r=this._getSnappingContext(s);this.snappingManager!=null&&this._updatingHandles.addPromise(T(this._snappingOperation.resnap(this.snappingManager,r)))})}destroy(){_(this.segmentLabels),_(this._snappingOperation),this._editGeometryOperations=_(this._editGeometryOperations),this._updatingHandles.destroy()}get _snappingEnabled(){return this.snappingManager!=null&&this.snappingManager.options.effectiveEnabled}get _requiresScenePoint(){const t=this._getEffectiveDrawSurface();return this.view.type==="3d"&&this.drawSurface!==t}get canRedo(){return this._editGeometryOperations.canRedo}get canUndo(){return this._editGeometryOperations.canUndo}get committedVertices(){return this._activeComponent.vertices.map(t=>this.coordinateHelper.vectorToArray(t.pos))}set drawingMode(t){this._set("drawingMode",t??Z)}get effectiveCursor(){return this.loading?fe:this._hideDefaultCursor?null:this.cursor||ye}get interactive(){return this._manipulator.interactive}set interactive(t){this._manipulator.interactive=t}get isCompleted(){return this._createOperationCompleted}get numCommittedVertices(){return this._activeComponent.vertices.length}get numVertices(){return this.stagedVertex!=null?this._activeComponent.vertices.length+1:this._activeComponent.vertices.length}get snappingOptions(){return this.snappingManager!=null?this.snappingManager.options:null}get stagedVertex(){const t=this._snappingOperation.stagedPoint,{constraint:e,elevationInfo:i,view:n}=this;if(!t||!e)return t;const l=q(t,n,i),h=l?e.closestTo(l):void 0;return h?B(h,t.spatialReference):t}set stagedVertex(t){this._snappingOperation.stagedPoint=Y(t)}get updating(){return this._updatingHandles.updating}get vertices(){const t=this.committedVertices;return this.stagedVertex!=null&&t.push(this.coordinateHelper.pointToArray(this.stagedVertex)),t}cancel(){this.complete({aborted:!0})}commitStagedVertex(){if(this._snappingOperation.abort(),this.stagedVertex!=null){const{stagedVertex:t}=this;this.stagedVertex=null,this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(t))}}complete(t){const e=t&&t.aborted||!1;this._snappingOperation.abort(),this.snappingManager!=null&&this.snappingManager.doneSnapping(),this.geometryType==="segment"||this.geometryType==="point"?this.commitStagedVertex():this.stagedVertex=null;const i=this.geometryType==="multipoint"&&this.numVertices===0||this.geometryType==="polyline"&&this.numVertices<2||this.geometryType==="polygon"&&this.numVertices<3;this._createOperationCompleted=!i,(this.isCompleted||e)&&this.emit("complete",{vertices:this.vertices.map((n,l)=>({componentIndex:0,vertexIndex:l,coordinates:n})),aborted:e,type:"complete"})}onInputEvent(t){switch(t.type){case"pointer-down":this._pointerDownStates.add(t.pointerId);break;case"pointer-up":this._pointerDownStates.delete(t.pointerId)}switch(t.type){case"pointer-move":return this._onPointerMove(t);case"hold":return this._onHold(t)}}redo(){this._editGeometryOperations.redo()}undo(){this.snappingManager!=null&&this.snappingManager.doneSnapping(),this._editGeometryOperations.undo()}_closeOnClickVertexIndex(t){const e=this._activeComponent;if(this.geometryType==="polygon"&&e.vertices.length>2){if(this._vertexWithinPointerDistance(e.vertices[0].pos,t))return 0;if(this._vertexWithinPointerDistance(e.vertices[e.vertices.length-1].pos,t))return e.vertices.length-1}return null}_createManipulatorDragPipeline(t){switch(this.drawingMode){case"click":return this._createManipulatorDragPipelineClick(t);case"freehand":return this._createManipulatorDragPipelineFreehand(t);case"hybrid":return this._createManipulatorDragPipelineHybrid(t)}}_createManipulatorDragPipelineClick(t){return w(t,(e,i,n,l)=>{const h=l==="touch"&&this._snappingEnabled;if(this.isCompleted||!h)return;const{snappingStep:c,cancelSnapping:s}=ge({predicate:()=>h,snappingManager:this.snappingManager,snappingContext:new P({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,feature:this.graphic,pointer:l,visualizer:this.snappingVisualizer}),updatingHandles:this._updatingHandles,useZ:!this._requiresScenePoint});n=n.next(r=>(h&&this.snappingManager!=null&&this.snappingManager.doneSnapping(),r)).next(s),i.next(this._screenToMapDragEventStep()).next(r=>(r.action==="start"&&(this.stagedVertex=r.mapStart,(this.geometryType==="segment"||h&&this.numVertices===0)&&this.commitStagedVertex()),r)).next(ue(this.view,this.elevationInfo)).next(...c).next(r=>(h&&(this.stagedVertex=r.mapEnd,r.action==="end"&&this.commitStagedVertex()),r)).next(r=>(r.action==="end"&&(this.geometryType!=="segment"&&this.geometryType!=="point"||this.complete()),r))})}_createManipulatorDragPipelineFreehand(t){return w(t,(e,i)=>{this.isCompleted||i.next(this._screenToMapDragEventStep()).next(n=>(n.action==="start"&&(this.stagedVertex==null&&(this.stagedVertex=n.mapStart),this.geometryType==="segment"&&this.commitStagedVertex()),n)).next(n=>{switch(n.action){case"start":case"update":this.stagedVertex=n.mapEnd,this.geometryType!=="polygon"&&this.geometryType!=="polyline"||this.commitStagedVertex();break;case"end":this.complete()}return n})})}_createManipulatorDragPipelineHybrid(t){return w(t,(e,i)=>{this.isCompleted||i.next(this._screenToMapDragEventStep()).next(n=>(n.action==="start"&&(this.stagedVertex==null&&(this.stagedVertex=n.mapStart),this.commitStagedVertex()),n)).next(n=>{switch(n.action){case"start":case"update":this.stagedVertex=n.mapEnd,this.geometryType!=="polygon"&&this.geometryType!=="polyline"||this.commitStagedVertex();break;case"end":this.geometryType!=="segment"&&this.geometryType!=="point"||this.complete()}return n})})}get _drawAtFixedElevation(){return(this.geometryType==="segment"||this.geometryType==="polygon")&&this.numCommittedVertices>0}_getEffectiveDrawSurface(){if(this.elevationDrawSurface==null)return this.drawSurface;if(!this.coordinateHelper.hasZ())return this.elevationDrawSurface.defaultZ=null,this.elevationDrawSurface;let t=this.defaultZ,e=!1;return this.elevationInfo!=null&&this.elevationInfo.mode==="absolute-height"&&(e=!0),this.snapToSceneEnabled!=null&&(e=this.snapToSceneEnabled),this.elevationInfo!=null&&this.elevationInfo.mode==="on-the-ground"&&(e=!1),this._drawAtFixedElevation&&(t=this.coordinateHelper.getZ(this._activeComponent.vertices[0].pos),e=!1),e?this.drawSurface:(this.elevationDrawSurface.defaultZ=t,this.elevationDrawSurface)}_mapToScreen(t){var e;return(e=this._getEffectiveDrawSurface())==null?void 0:e.mapToScreen(t)}_onHold(t){this._snappingOperation.abort(),this.drawingMode==="click"&&t.pointerType==="touch"&&this._snappingEnabled&&(this.stagedVertex=t.mapPoint),t.stopPropagation()}_onImmediateClick(t){if(t.pointerType==="mouse"&&t.button===2||this._manipulator.dragging)return;const e=this._activeComponent;if(this._closeOnClickVertexIndex(t.screenPoint)!=null)return t.stopPropagation(),void this.complete();const i=this._screenToMap(t.screenPoint);if(i!=null)switch(this.drawingMode){case"freehand":this.geometryType==="point"&&(this.stagedVertex!=null?this.commitStagedVertex():this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(i)),this.complete());break;case"click":case"hybrid":this._snappingOperation.abort(),this.stagedVertex!=null?this.commitStagedVertex():this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(i)),(this.geometryType==="point"||this.geometryType==="segment"&&e.vertices.length===2||this.geometryType==="segment"&&this.drawingMode==="hybrid"&&e.vertices.length===1)&&this.complete()}t.stopPropagation()}_onImmediateDoubleClick(t){this._manipulator.dragging||this.geometryType==="point"||(this.complete(),t.stopPropagation())}_onPointerMove(t){const e=j(t.x,t.y);this._stagedScreenPoint=e,this._stagedPointerType=t.pointerType,this._stagedPointerId=t.pointerId;const i=this._snappingOperation,n=this._manipulator;this._pointerDownStates.has(t.pointerId)||n.grabbing||!n.interactive?i.abort():(t.stopPropagation(),this._updateStagedVertexOnPointerMove(e,t.pointerType))}_onViewpointChange(){const t=this._manipulator;this._stagedPointerType==="mouse"&&this._stagedScreenPoint&&this._stagedPointerId!=null&&!this._pointerDownStates.has(this._stagedPointerId)&&!t.grabbing&&t.interactive?this._updateStagedVertexOnPointerMove(this._stagedScreenPoint,this._stagedPointerType??"mouse"):this._snappingOperation.abort()}_updateStagedVertexOnPointerMove(t,e){var r;const i=this._snappingOperation,n=this._closeOnClickVertexIndex(t);if(n!=null)return this._closeOnVertex(n),void i.abort();const l=this._screenToMap(t),h=this._requiresScenePoint?(r=this.drawSurface)==null?void 0:r.screenToMap(t):null;if(l==null)return this._hideDefaultCursor=!0,void i.abort();this._hideDefaultCursor=!1;const c=this.snappingManager;if(c==null)return this.stagedVertex=l,void i.abort();const s=this._getSnappingContext(e);this._updatingHandles.addPromise(T(i.snap({point:l,scenePoint:h},c,s)))}_closeOnVertex(t){this.stagedVertex=null;const e={componentIndex:0,vertexIndex:t,coordinates:this.coordinateHelper.vectorToArray(this._activeComponent.vertices[t].pos)};this.emit("cursor-update",{updated:null,vertices:[e],operation:"apply",type:"vertex-update"})}_screenToMap(t){var e;return(e=this._getEffectiveDrawSurface())==null?void 0:e.screenToMap(t)}_screenToMapDragEventStep(){let t=null;return e=>{if(e.action==="start"&&(t=this._screenToMap(e.screenStart)),t==null)return null;const i=this._screenToMap(e.screenEnd);return i!=null?{...e,mapStart:t,mapEnd:i}:null}}_vertexWithinPointerDistance(t,e){const n=this._mapToScreen(this.coordinateHelper.vectorToDehydratedPoint(t));return n!=null&&_e(n,e,25)}_getSnappingContext(t){var i;const e=this._drawAtFixedElevation?(i=this.elevationDrawSurface)==null?void 0:i.defaultZ:null;return new P({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,pointer:t,feature:this.graphic,visualizer:this.snappingVisualizer,selfSnappingZ:e!=null?{value:e,elevationInfo:this.elevationInfo}:null})}};function _e(t,e,i){const n=t.x-e.x,l=t.y-e.y;return n*n+l*l<=i}a([p()],o.prototype,"_hideDefaultCursor",void 0),a([p()],o.prototype,"_snappingOperation",void 0),a([p()],o.prototype,"_snappingEnabled",null),a([p({constructOnly:!0})],o.prototype,"graphic",void 0),a([p()],o.prototype,"constraint",void 0),a([p()],o.prototype,"defaultZ",void 0),a([p()],o.prototype,"isDraped",void 0),a([p({value:Z})],o.prototype,"drawingMode",null),a([p({constructOnly:!0})],o.prototype,"elevationDrawSurface",void 0),a([p({constructOnly:!0})],o.prototype,"elevationInfo",void 0),a([p({constructOnly:!0,type:H})],o.prototype,"labelOptions",void 0),a([p({constructOnly:!0,type:$})],o.prototype,"tooltipOptions",void 0),a([p({constructOnly:!0})],o.prototype,"geometryType",void 0),a([p({constructOnly:!0})],o.prototype,"hasM",void 0),a([p({constructOnly:!0})],o.prototype,"hasZ",void 0),a([p()],o.prototype,"cursor",void 0),a([p()],o.prototype,"effectiveCursor",null),a([p()],o.prototype,"loading",void 0),a([p({constructOnly:!0})],o.prototype,"manipulators",void 0),a([p({constructOnly:!0})],o.prototype,"drawSurface",void 0),a([p({constructOnly:!0})],o.prototype,"segmentLabels",void 0),a([p({constructOnly:!0})],o.prototype,"snappingManager",void 0),a([p({constructOnly:!0})],o.prototype,"snappingVisualizer",void 0),a([p()],o.prototype,"snapToSceneEnabled",void 0),a([p()],o.prototype,"stagedVertex",null),a([p()],o.prototype,"lastVertex",void 0),a([p()],o.prototype,"updating",null),a([p({constructOnly:!0})],o.prototype,"view",void 0),o=a([N("esri.views.draw.DrawOperation")],o);class Pe{constructor(e,i,n,l=null){this._elevationInfo=e,this.defaultZ=i,this._view=n,this._excludeGraphics=l}screenToMap(e){if(this.defaultZ!=null)return this._view.sceneIntersectionHelper.intersectElevationFromScreen(b(e.x,e.y),this._elevationInfo,this.defaultZ,this._excludeGraphics);const i=this._view.sceneIntersectionHelper.intersectElevationFromScreen(b(e.x,e.y),this._elevationInfo,0,this._excludeGraphics);return i!=null&&(i.z=void 0),i}mapToScreen(e){const i=R(e.x,e.y,E(this._view,e,this._elevationInfo),e.spatialReference);return this._view.toScreen(i)}constrainZ(e){const{defaultZ:i}=this;return i!=null&&e.z!==i&&((e=F(e)).z=i),e}}class De{constructor(e,i,n=[]){this.view=e,this.elevationInfo=i,this.exclude=n}screenToMap(e){const i=this.view.toMap(e,{exclude:this.exclude});return i!=null&&(i.z=X(i,this.view,this.elevationInfo)),i}mapToScreen(e){let i=e;return this.elevationInfo!=null&&(i=R(e.x,e.y,E(this.view,e,this.elevationInfo),e.spatialReference)),this.view.toScreen(i)}constrainZ(e){return e}}class He{constructor(e,i=!1,n=0){this.view=e,this.hasZ=i,this.defaultZ=n,this.mapToScreen=l=>e.toScreen(l),this.screenToMap=i?l=>{const h=e.toMap(l);return h.z=n,h}:l=>e.toMap(l)}constrainZ(e){const{defaultZ:i}=this;return this.hasZ&&e.z!==i&&((e=F(e)).z=i),e}}function v(t,e,i=null){return i!=null?[t,e,i]:[t,e]}function W(t,e,i=null){return i!=null?{x:t,y:e,z:i}:{x:t,y:e}}class k{constructor(e){this.spatialReference=e}mapToLocalMultiple(e){return e.map(i=>this.mapToLocal(i)).filter(pe)}get doUnnormalization(){return!1}}class xe extends k{constructor(e,i,n=null){super(i),this._defaultZ=n,this.transform=M(),this.transformInv=M(),this.transform=J(e),ee(this.transformInv,this.transform)}makeMapPoint(e,i){return v(e,i,this._defaultZ)}mapToLocal(e){return W(this.transform[0]*e[0]+this.transform[2]*e[1]+this.transform[4],this.transform[1]*e[0]+this.transform[3]*e[1]+this.transform[5])}localToMap(e){return v(this.transformInv[0]*e.x+this.transformInv[2]*e.y+this.transformInv[4],this.transformInv[1]*e.x+this.transformInv[3]*e.y+this.transformInv[5],this._defaultZ)}}class we extends k{constructor(e,i){super(e.spatialReference),this.view=e,this.defaultZ=null,this.pWS=d(),this.tangentFrameUpWS=d(),this.tangentFrameRightWS=d(),this.tangentFrameForwardWS=d(),this.localFrameRightWS=d(),this.localFrameUpWS=d(),this.worldToLocalTransform=O(),this.localToWorldTransform=O(),this.scale=1,this.scale=e.resolution,this.referenceMapPoint=i,this.defaultZ=i.hasZ?i.z:null;const n=e.state.camera.viewRight;this.view.renderCoordsHelper.toRenderCoords(this.referenceMapPoint,this.pWS),this.view.renderCoordsHelper.worldBasisAtPosition(this.pWS,x.X,this.tangentFrameRightWS),this.view.renderCoordsHelper.worldBasisAtPosition(this.pWS,x.Y,this.tangentFrameUpWS),this.view.renderCoordsHelper.worldBasisAtPosition(this.pWS,x.Z,this.tangentFrameForwardWS);const l=d();te(l,this.tangentFrameForwardWS,ie(n,this.tangentFrameForwardWS)),ne(this.localFrameRightWS,n,l),se(this.localFrameRightWS,this.localFrameRightWS),re(this.localFrameUpWS,this.tangentFrameForwardWS,this.localFrameRightWS),oe(this.worldToLocalTransform,this.localFrameRightWS,this.tangentFrameRightWS),ae(this.localToWorldTransform,this.worldToLocalTransform)}get doUnnormalization(){return this.view.viewingMode==="global"}makeMapPoint(e,i){return v(e,i,this.defaultZ)}mapToLocal(e){const i=d();this.view.renderCoordsHelper.toRenderCoords(new m({x:e[0],y:e[1],spatialReference:this.spatialReference}),i),C(i,i,this.worldToLocalTransform);const n=this.view.renderCoordsHelper.fromRenderCoords(i,this.view.spatialReference);return n!=null?W(n.x/this.scale,n.y/this.scale):null}localToMap(e){const i=d();this.view.renderCoordsHelper.toRenderCoords(new m({x:e.x*this.scale,y:e.y*this.scale,spatialReference:this.spatialReference}),i),C(i,i,this.localToWorldTransform);const n=this.view.renderCoordsHelper.fromRenderCoords(i,this.view.spatialReference);return n!=null?v(n.x,n.y,this.defaultZ):null}}function $e(t,e){if(t.type==="2d")return new xe(t.state.transform,t.spatialReference,e.length>2?e[2]:null);if(t.type==="3d"){const i=e.length>2?new m({x:e[0],y:e[1],z:e[2],spatialReference:t.spatialReference}):new m({x:e[0],y:e[1],spatialReference:t.spatialReference});return new we(t,i)}return null}export{$e as F,He as a,Ie as c,Z as e,W as g,o as k,De as o,Pe as r};
